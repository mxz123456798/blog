---
layout:     post
title:      "Toast的基本与拓展使用方法"
subtitle:   "Toast"
date:       2017-09-15 23:28:00
author:     "Max"
header-img: "img/post-bg-2015.jpg"
catalog: true
tags:
    - Android
---



#### 最常见用法
```java
Toast.makeText(MainActivity.this, "Toast", Toast.LENGTH_SHORT).show();
```
这是最常见的用法并没有什么可以多说的。
#### 设置Toast显示的位置
```java
Toast centerToast = Toast.makeText(getApplicationContext(), "centerToast", Toast.LENGTH_LONG);
centerToast.setGravity(Gravity.CENTER, 0, 0);
centerToast.show();
```

![](http://upload-images.jianshu.io/upload_images/6524321-1369a8f85d263b49.gif?imageMogr2/auto-orient/strip)

Toast的setGravity()方法用来设置Toast出现的位置，三个参数类型都为int，第一个参数设置的位置为屏幕从右上角到左下角的直线，正数在右上，负数在左下。第二第三个参数分别代表X、Y轴的偏移量，X从屏幕左边到右边为由负到正，Y为从屏幕上方到下方为由负到正。一些API提供给我们的数值可以帮我们快速设置，比如Gravity.CENTER，Gravity.TOP，Gravity.BOTTOM等。
#### 自定义Toast
有时我们可能需要Toast显示一些其他的东西或者对Toast进行一下简单的自定义，比如我想让Toast弹出下面这样图片的样式。
![](http://upload-images.jianshu.io/upload_images/6524321-293f90923a78a44c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)
首先把你想要显示的图片放到drawable下，然后在layout下新建一个布局文件，用来绘制自定义的Toast。
```xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical" android:layout_width="match_parent"
    android:layout_height="match_parent">
    <ImageView
        android:id="@+id/iv_toast"
        android:layout_width="45dp"
        android:layout_height="45dp"
        android:scaleType="fitCenter"
        android:src="@drawable/success" />

    <TextView
        android:id="@+id/tv_toast"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="成功"
        android:textSize="22sp" />
</LinearLayout>
```
之后就需要在代码里新建一个Toast，然后把这个Toast的样式设置为你写好的样式。
首先创建一个LayoutInflater对象，然后用LayoutInflater的inflate()方法把我们写好的xml文件填充为一个view对象，然后用Toast的setView()方法把这个view对象传进去，就完成了Toast样式的自定义。之后用setDuration()方法来设置显示时长，不设置也可以，默认为Toast.LENGTH_SHORT。
```java
LayoutInflater inflater = LayoutInflater.from(MainActivity.this);
View view = inflater.inflate(R.layout.layout_custom_toast, null);
Toast customToast = new Toast(MainActivity.this);
customToast.setView(view);
customToast.setDuration(Toast.LENGTH_LONG);
customToast.show();
```

![](http://upload-images.jianshu.io/upload_images/6524321-e4d0a3318398cc2b.gif?imageMogr2/auto-orient/strip)

#### 立即显示Toast
当有多个Toast显示事件触发时，所有的Toast会形成一个队列，等待之前的Toast显示完毕才会接着显示之后的Toast，如果我们想要让Toast立即显示 就需要做一些特殊的处理。
+ 写一个方法来实现
  在全局变量中声明一个Toast```private Toast immediatelyToast;```然后写一个方法
  ```java
    private void showToast(String text) {
        if (immediatelyToast == null) {
            immediatelyToast = Toast.makeText(MainActivity.this, text, Toast.LENGTH_LONG);
        } else {
            immediatelyToast.setText(text);
        }
        immediatelyToast.show();
    }
  ```
  这个想法很简单，当Toast为空时创建一个新的Toast,不为空时直接通过setText()方法来改变Tosat的内容，之后在重新调用show()方法显示就可以达到效果。
+ 把方法封装成一个类
  以上方法只能在一个Activity中生效，一个工程显然不可能只有一个Activity，因此我们可以把这个方法封装成一个类来更好的复用这段代码。
```java
public class ToastUtil {
    public static Toast mToast;

    public static void showMsg(Context context,String msg) {
        if (mToast == null) {
            mToast = Toast.makeText(context, msg, Toast.LENGTH_LONG);
        } else {
            mToast.setText(msg);
        }
        mToast.show();
    }
    private ToastUtil(){
        
    }
}
```
把构造方法私有，只留有一个静态方法供调用，总共传入两个参数，一个Context和一个String分别对应Toast.makeText()的前两个参数。这样的话这个类就封装好了。

然后测试一下这段代码```ToastUtil.showMsg(getApplicationContext(), i++ +"");```

![](http://upload-images.jianshu.io/upload_images/6524321-bf7974826ac4c300.gif?imageMogr2/auto-orient/strip)